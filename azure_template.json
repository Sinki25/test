{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
  	"adminUsername": {
  		"type": "string",
  		"defaultValue": "linuxuser",
  		"metadata": {
        "description": "Linux VM User Account Name"
      }
  	},
  	"adminPasswordOrKey": {
  		"type": "securestring",
  		"metadata": {
        "description": "Linux VM User Password"
      }
  	},
  	"agentVMCount": {
      "defaultValue": 1,
      "type": "Int",
      "metadata": {
        "description": "The number of VM build servers to provision in this deployment."
      }
    },
  	 "authenticationType": {
     "type": "string",
     "defaultValue": "password",
     "allowedValues": [
       "sshPublicKey",
       "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
  	"deploymentName": {
        "type": "string",
        "defaultValue": "TestDeployment"
    },
    "dnsLabelPrefix": {
      "defaultValue": "linuxdefault",
      "type": "String",
      "metadata": {
        "description": "DNS Label for the Public IP. It must be lowercase and must match the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
      }
    },
    "link_to_DS_build": {
      "type": "string",
      "defaultValue": "https://builds.ds-in.net/builds/Release_1_0_0/firewall-6.3.1.31046/DataSunrise_Suite_6_3_1_31046.linux.64bit.run?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=minio_user%2F20201119%2F%2Fs3%2Faws4_request&X-Amz-Date=20201119T114935Z&X-Amz-Expires=432000&X-Amz-SignedHeaders=host&X-Amz-Signature=2ecfa701fccca819028ff0f4760dd781a178d93a03ee91ba49f4d29a8a37bf1c",
      "metadata": {
        "description": "Link to DataSunrise Suite build."
      }
    },
  	"location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "AllTraffic",
      "metadata": {
        "description": "Name of the Network Security Group"
      }
    },
	"vmName": {
      "type": "string",
      "defaultValue": "simpleLinuxVM",
      "metadata": {
        "description": "The name of you Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_F1",
      "metadata": {
        "description": "Size of the Virtual Machine."
      }
    }
  },
  "variables": {
  	"addressPrefix": "10.0.0.0/16",
  	"imagePublisher": "OpenLogic",
  	"imageOffer": "CentOS",
  	"imageSKU": "7_8",
  	"linuxConfiguration": {
      "disablePasswordAuthentication": false
  	},
  	"networkInterfaceName": "[concat(parameters('vmName'),'NetInt')]",
  	"publicIPAddressName": "[concat(parameters('dnsLabelPrefix'), '-ip')]",
  	"storageAccountName":"[concat('vhds', uniqueString(resourceGroup().id))]",
  	"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnetName'))]",
  	"subnetName": "Subnet-1",
  	"subnetAddressPrefix": "10.0.0.0/24",
  	"virtualNetworkName": "MyVNET"
  },
  "resources": [
  	{
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {},
      "copy": {
        "name": "storageLoop",
        "count": "[parameters('agentVMCount')]"
      }
    },
  	{
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('publicIpAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        },
        "idleTimeoutInMinutes": 4
      }
    },
  	{
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressPrefix')]"
            }
          }
        ]
      }
    },
  	{
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Inbound",
            "properties": {
              "priority": 1000,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "Outbound",
            "properties": {
            "priority": 1000,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Outbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "22"
          }
      	}
        ]
      }
    },
  	{
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
       	"[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
       	"[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
       	"[resourceId('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          	{
            	"name": "ipconfig1",
            	"properties": {
              		"subnet": {
                		"id": "[variables('subnetRef')]"
            		},
           			"privateIPAllocationMethod": "Dynamic",
            		"publicIpAddress": {
               			"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
            		}
            	}
          	}
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "tags": {
   		"Name": "[parameters('deploymentName')]"
		},
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
          	"name": "osdisk",
            "createOption": "fromImage",
            "caching": "ReadWrite"
          },
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        }
      },
      "resources":[
      	
      ]
    }
  ]
}